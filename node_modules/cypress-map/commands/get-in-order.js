/// <reference types="cypress" />
var registerQuery = require('./utils').registerQuery;
registerQuery('getInOrder', function () {
    var selectors = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        selectors[_i] = arguments[_i];
    }
    // if you pass a single array of selectors, use it as the selectors
    if (Array.isArray(selectors) &&
        selectors.length === 1 &&
        Array.isArray(selectors[0])) {
        selectors = selectors[0];
    }
    if (!Array.isArray(selectors)) {
        throw new Error("Invalid cy.getInOrder selectors ".concat(selectors));
    }
    var log = Cypress.log({
        name: 'getInOrder',
        message: selectors.join(','),
    });
    return function () {
        var subject = Cypress.$(selectors[0]);
        if (subject.length === 0) {
            throw new Error("No elements found for ".concat(selectors[0]));
        }
        selectors.slice(1).forEach(function (selector) {
            var next = Cypress.$(selector);
            if (next.length === 0) {
                throw new Error("No elements found for ".concat(selector));
            }
            // avoid sorting elements by passing the elements as a single array
            subject = Cypress.$(subject.toArray().concat(next.toArray()));
        });
        return subject;
    };
});
